import os
import base64
import json
import time
import random
from Crypto.Cipher import AES

# --- ЁЯФе STARTUP LOGO ---
def show_logo():
    print("""
    тЦИтЦИтЦИтЦИтЦИтЦИтЦИтХЧтЦИтЦИтЦИтХЧ   тЦИтЦИтХЧтЦИтЦИтЦИтЦИтЦИтЦИтХЧ тЦИтЦИтХЧтЦИтЦИтЦИтЦИтЦИтЦИтЦИтХЧ
    тЦИтЦИтХФтХРтХРтХРтХРтХЭтЦИтЦИтЦИтЦИтХЧ  тЦИтЦИтХСтЦИтЦИтХФтХРтХРтЦИтЦИтХЧтЦИтЦИтХСтЦИтЦИтХФтХРтХРтХРтХРтХЭ
    тЦИтЦИтЦИтЦИтЦИтХЧ  тЦИтЦИтХФтЦИтЦИтХЧ тЦИтЦИтХСтЦИтЦИтЦИтЦИтЦИтЦИтХФтХЭтЦИтЦИтХСтЦИтЦИтЦИтЦИтЦИтЦИтЦИтХЧ
    тЦИтЦИтХФтХРтХРтХЭ  тЦИтЦИтХСтХЪтЦИтЦИтХЧтЦИтЦИтХСтЦИтЦИтХФтХРтХРтХРтХЭ тЦИтЦИтХСтХЪтХРтХРтХРтХРтЦИтЦИтХС
    тЦИтЦИтЦИтЦИтЦИтЦИтЦИтХЧтЦИтЦИтХС тХЪтЦИтЦИтЦИтЦИтХСтЦИтЦИтХС     тЦИтЦИтХСтЦИтЦИтЦИтЦИтЦИтЦИтЦИтХС
    тХЪтХРтХРтХРтХРтХРтХРтХЭтХЪтХРтХЭ  тХЪтХРтХРтХРтХЭтХЪтХРтХЭ     тХЪтХРтХЭтХЪтХРтХРтХРтХРтХРтХРтХЭ
    """)

# --- рдХреБрдХреАрдЬрд╝ рдлрд╛рдЗрд▓ рдЗрдирдкреБрдЯ ---
COOKIE_FILE = input("ЁЯНк рдХреБрдХреА рдлрд╛рдЗрд▓ рдХрд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ (default: chat_cookie.json): ") or "chat_cookie.json"

# --- рдпреВрдирд┐рдХ рдХрдиреНрд╡реЛ UID ---
CONVO_UID = f"CONVO-{random.randint(1000, 9999)}"
print(f"ЁЯЖФ рдХрдиреНрд╡реЛ UID: {CONVO_UID}")

# --- рд╕реНрдкреАрдб рд╕реЗрдХрдВрдб ---
SPEED_SEC = float(input("тП│ рд╕реНрдкреАрдб рд╕реЗрдХрдВрдб (default: 1.5s): ") or 1.5)

# --- SECRET KEY (AES-256) ---
SECRET_KEY = b'This_is_a_32_byte_secret_key!!'

# --- Padding & Unpadding ---
def pad(data):
    return data + (16 - len(data) % 16) * chr(16 - len(data) % 16)

def unpad(data):
    return data[:-ord(data[-1])]

# --- рдореИрд╕реЗрдЬ рдПрдиреНрдХреНрд░рд┐рдкреНрдЯ ---
def encrypt_message(message):
    cipher = AES.new(SECRET_KEY, AES.MODE_ECB)
    encrypted = cipher.encrypt(pad(message).encode())
    return base64.b64encode(encrypted).decode()

# --- рдореИрд╕реЗрдЬ рдбрд┐рдХреНрд░рд┐рдкреНрдЯ ---
def decrypt_message(encrypted_message):
    cipher = AES.new(SECRET_KEY, AES.MODE_ECB)
    decrypted = cipher.decrypt(base64.b64decode(encrypted_message)).decode()
    return unpad(decrypted)

# --- рдЪреИрдЯ рд▓реЛрдб ---
def load_chat():
    if os.path.exists(COOKIE_FILE):
        with open(COOKIE_FILE, "r") as file:
            return json.load(file)
    return []

# --- рдЪреИрдЯ рд╕реЗрд╡ ---
def save_chat(messages):
    with open(COOKIE_FILE, "w") as file:
        json.dump(messages, file)

# --- рдЪреИрдЯ рд╕реНрдЯрд╛рд░реНрдЯ ---
def start_chat():
    show_logo()
    print(f"ЁЯФТ рд╕реБрд░рдХреНрд╖рд┐рдд рдСрдлрд▓рд╛рдЗрди рдХрдиреНрд╡рд░реНрд╕реЗрд╢рди ({CONVO_UID})\n")
    
    messages = load_chat()
    
    while True:
        msg = input("ЁЯСд рдЖрдк: ")
        if msg.lower() == "exit":
            break

        encrypted_msg = encrypt_message(msg)
        messages.append(encrypted_msg)
        save_chat(messages)

        print(f"ЁЯФР рдПрдиреНрдХреНрд░рд┐рдкреНрдЯреЗрдб рдореИрд╕реЗрдЬ: {encrypted_msg}\n")

        # --- рдСрдЯреЛ рд░рд┐рдкреНрд▓рд╛рдИ (рд╕реНрдкреАрдб рд╕реЗрдЯрд┐рдВрдЧ рдХреЗ рд╕рд╛рде) ---
        time.sleep(SPEED_SEC)
        reply = "рдпрд╣ рдПрдХ рдбрд┐рдлреЙрд▓реНрдЯ рдПрдиреНрдХреНрд░рд┐рдкреНрдЯреЗрдб рдЙрддреНрддрд░ рд╣реИред"
        encrypted_reply = encrypt_message(reply)
        messages.append(encrypted_reply)
        save_chat(messages)
        print(f"ЁЯдЦ рд░рд┐рдкреНрд▓рд╛рдИ: {reply} (ЁЯФР {encrypted_reply})\n")

    print("\nЁЯФУ рдбрд┐рдХреНрд░рд┐рдкреНрдЯреЗрдб рдЪреИрдЯ рд╣рд┐рд╕реНрдЯреНрд░реА:\n")
    for encrypted_msg in messages:
        print(f"ЁЯТм {decrypt_message(encrypted_msg)}")

# --- рд╕реНрдХреНрд░рд┐рдкреНрдЯ рд░рди ---
if __name__ == "__main__":
    start_chat()
